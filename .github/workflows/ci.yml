name: CI/CD

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Please enter the reason for the manual build:'
        required: true
        default: 'Build failed during GitHub error...'
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ '20.x' ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node_version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::new-service-output name=dir::$(yarn cache dir)"

      - name: Cache dependencies
        uses: actions/cache@v4
        id: yarn-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        run: |
          echo "YARN CACHE CHANGED"
          yarn install --prefer-offline
        if: |
          steps.cache-yarn-cache.outputs.cache-hit != 'true' ||
          steps.cache-node-modules.outputs.cache-hit != 'true'

      - name: Validate code
        run: yarn validate

  test:
    runs-on: ubuntu-latest
    needs: build

    strategy:
      matrix:
        os: [ ubuntu-latest ]
        node-version: [ '20.x' ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: |
          echo "YARN CACHE CHANGED"
          yarn --prefer-offline
        if: |
          steps.cache-yarn-cache.outputs.cache-hit != 'true' ||
          steps.cache-node-modules.outputs.cache-hit != 'true'

      - name: Run tests
        run: yarn test
